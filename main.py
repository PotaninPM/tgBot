import openai
import asyncio
import markups as nav
import logging
import config
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from db import Database
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types.message import ContentType

import time
import datetime

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
messages  = [
    {"role": "system", "content": "you are a personal learning assistant who helps you do whatever you are asked to do."},
]

def update(messages, role, content):
    messages.append({"role": role, "content": content})
    return messages
PAYMENTS_TOKEN = "1744374395:TEST:46a69684b6ea9ed7d292"
#API –∫–ª—é—á OpenAI
openai.api_key = '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'
# –¢–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ –æ—Ç BotFather
bot = Bot(token='6262271892:AAHbrysP9XhiZXUt4QweC2b0KsL7bkN7D0U')

dp = Dispatcher(bot)
#–±–∞–∑–∞ –¥–∞–Ω–Ω—Ö Sqlite
db = Database('database.db')

#–ø–µ—Ä–µ–≤–æ–¥ –¥–Ω–µ–π –≤ —Å–µ–∫—É–Ω–¥—ã
def days_to_seconds(days):
    return days * 24 * 3600
#—Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def time_sub_day(get_time):
    time_now = int(time.time())
    middle_time = int(get_time) - time_now
    time_end = middle_time // (3600 * 24)
    if(middle_time <= 0):
        return False
    else:
        dt = str(datetime.timedelta(seconds=middle_time))
        dt = dt.replace("days", "–¥–Ω–µ–π")
        return dt
#–ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if(not db.user_exists(message.from_user.id)):
        db.add_user(message.from_user.id)
        em1 = 'potanin_08@list.ru'
        em = 'example@gmail.com'
        await bot.send_message(message.from_user.id, "–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ!üëã –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –õ–∏—á–Ω–æ–º –£—á–µ–±–Ω–æ–º –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ. –≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º —Å —Ç–µ–º —á–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ. –í –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç : –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç, –ø–æ–∏—Å–∫ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ä–µ—à–µ–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–¥–∞—á –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å 2 –ø—Ä–æ–±–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã —É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏—Ç—Å—è –≤ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç–µ –±–æ—Ç–∞. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É(–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –≤—Å–µ–º –∫–Ω–æ–ø–∫–∞–º –≤ —Ä–∞–∑–¥–µ–ª–µ –ß–¢–û –≠–¢–û‚ùì). –ü–æ—á—Ç–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: " + em1 + ". –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ")
        await bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–∑–¥–∞–π—Ç–µ –í–∞—à –ª–æ–≥–∏–Ω, –Ω–∞–ø–∏—Å–∞–≤ –µ–≥–æ –≤ —Å—é–¥–∞(—ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã)üëë")
    elif(db.get_nickname(message.from_user.id) == "setnickname"):
        await bot.send_message(message.from_user.id, "–°–æ–∑–¥–∞–π—Ç–µ –í–∞—à –ª–æ–≥–∏–Ω, –Ω–∞–ø–∏—Å–∞–≤ –µ–≥–æ —Å—é–¥–∞!!!")
    elif(db.get_email(message.from_user.id) == "setemail"):
        await bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—Éüì¨ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è")
    else: 
        if(db.get_sub(message.from_user.id) == "–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞" and db.get_queries_pr(message.from_user.id) == '0'):
            talk = "–ù–æ —Ç–∞–∫ –∫–∞–∫ –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º‚ùå. –ß—Ç–æ–±—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üíµ–ö–£–ü–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£"
        elif(db.get_queries_pr(message.from_user.id) != '0'):
            talk = "–£ –í–∞—Å –µ—Å—Ç—å –µ—â–µ " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ –í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –±–æ—Ç—É –≤–æ–ø—Ä–æ—Å—ã‚úÖ.\n –ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö.\n(–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ–Ω –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω–æ)"
        else:
            if(db.get_queries(message.from_user.id) != '0'):
                talk = "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ —É –í–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º‚úÖ.\n–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö.\n(–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ–Ω –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω–æ)"
            elif(db.get_queries(message.from_user.id) == '0'):
                talk = "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞,–Ω–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º‚ùå.\n–ß—Ç–æ–±—ã —ç—Ç–æ —Å–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚ûï–î–û–ö–£–ü–ò–¢–¨ –ó–ê–ü–†–û–°–´"
        if(db.get_sub(message.from_user.id) == "–í–ª–∞–¥–µ–ª–µ—Ü"):
            await bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –í–ª–∞–¥–µ–ª–µ—Ü!üëã\n", reply_markup= nav.mainMenu1)
        else:
            await bot.send_message(message.from_user.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!üëã\n" + talk, reply_markup= nav.mainMenu)
#–æ–ø–ª–∞—Ç–∞ –≤—Å—è
#–æ–ø–ª–∞—Ç–∞ –¥–æ–ø –∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query_handler(text='buydop')
async def buydop(call: types.CallbackQuery):
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", description="–ó–∞–ø—Ä–æ—Å—ã 60 —à—Ç—É–∫", payload="queries60", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":7500}])

@dp.callback_query_handler(text='buydop1')
async def buydop(call: types.CallbackQuery):
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", description="–ó–∞–ø—Ä–æ—Å—ã 150 —à—Ç—É–∫", payload="queries150", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":16500}])

@dp.callback_query_handler(text='buydop2')
async def buydop(call: types.CallbackQuery):
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", description="–ó–∞–ø—Ä–æ—Å—ã 240 —à—Ç—É–∫", payload="queries240", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":26500}])

@dp.callback_query_handler(text='buydop3')
async def buydop(call: types.CallbackQuery):
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", description="–ó–∞–ø—Ä–æ—Å—ã 330 —à—Ç—É–∫", payload="queries330", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":35500}])
#–æ–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–æ–∫
@dp.callback_query_handler(text='buysub')
async def buysub(call: types.CallbackQuery):
     if(db.get_promo_user(call.from_user.id) != 'none'):
        disc1 = int(db.get_promo_disc(db.get_promo_user(call.from_user.id)))
        new = 75 - (75 * (disc1 / 100))
        new_price = int(round(new, 1) * 100)
     else:
         new_price = 7500
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", description='–ü–æ–¥–ø–∏—Å–∫–∞ "–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π"', payload="subNew", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount": new_price}])

@dp.callback_query_handler(text='buysub1')
async def buysub(call: types.CallbackQuery):
     if(db.get_promo_user(call.from_user.id) != 'none'):
        disc1 = int(db.get_promo_disc(db.get_promo_user(call.from_user.id)))
        inter = 165 - (165 * (disc1 / 100))
        inter_price = int(round(inter, 1) * 100)
     else:
         inter_price = 16500
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", description='–ü–æ–¥–ø–∏—Å–∫–∞ "–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è"', payload="subInter", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":inter_price}])


@dp.callback_query_handler(text='buysub2')
async def buysub(call: types.CallbackQuery):
     if(db.get_promo_user(call.from_user.id) != 'none'):
        disc1 = int(db.get_promo_disc(db.get_promo_user(call.from_user.id)))
        pro = 265 - (265 * (disc1 / 100))
        pro_price = int(round(pro, 1) * 100)
     else:
         pro_price = 26500
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", description='–ü–æ–¥–ø–∏—Å–∫–∞ "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"', payload="subPro", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":pro_price}])

@dp.callback_query_handler(text='buysub3')
async def buysub(call: types.CallbackQuery):
     if(db.get_promo_user(call.from_user.id) != 'none'):
        disc1 = int(db.get_promo_disc(db.get_promo_user(call.from_user.id)))
        exp = 355 - (355 * (disc1 / 100))
        exp_price = int(round(exp, 1) * 100)
     else:
         exp_price = 35500
     await bot.delete_message(call.from_user.id, call.message.message_id)
     await bot.send_invoice(chat_id=call.from_user.id, title="–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", description='–ü–æ–¥–ø–∏—Å–∫–∞ "–≠–∫—Å–ø–µ—Ä—Ç"', payload="subExp", provider_token=PAYMENTS_TOKEN,currency="RUB", start_parameter="bot", prices=[{"label": "–†—É–±–ª–∏", "amount":exp_price}])
#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ
@dp.pre_checkout_query_handler()
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)
#–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–¥–∞ –∑–∞—á–∏—Å–ª—è—Ç—å
@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def process_pay(message: types.Message):

    if message.successful_payment.invoice_payload == "queries60":
        db.give_queries60(message.from_user.id)
        await bot.send_message(message.from_user.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n –ó–∞–ø—Ä–æ—Å—ã 60 —à—Ç—É–∫ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à —Å—á–µ—Ç‚úÖ." + "\n –£ –≤–∞—Å —Å–µ–π—á–∞—Å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ.")
    elif message.successful_payment.invoice_payload == "queries150":
        db.give_queries150(message.from_user.id)
        await bot.send_message(message.from_user.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n –ó–∞–ø—Ä–æ—Å—ã 150 —à—Ç—É–∫ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à —Å—á–µ—Ç‚úÖ." + "\n –£ –≤–∞—Å —Å–µ–π—á–∞—Å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ.")
    elif message.successful_payment.invoice_payload == "queries240":
        db.give_queries240(message.from_user.id)
        await bot.send_message(message.from_user.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n –ó–∞–ø—Ä–æ—Å—ã 240 —à—Ç—É–∫ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à —Å—á–µ—Ç‚úÖ." + "\n –£ –≤–∞—Å —Å–µ–π—á–∞—Å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ.")
    elif message.successful_payment.invoice_payload == "queries330":
        db.give_queries330(message.from_user.id)
        await bot.send_message(message.from_user.id, "–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n –ó–∞–ø—Ä–æ—Å—ã 330 —à—Ç—É–∫ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à —Å—á–µ—Ç‚úÖ." + "\n –£ –≤–∞—Å —Å–µ–π—á–∞—Å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ.")
    
    elif(message.successful_payment.invoice_payload == "subNew"):
        time_sub = int(time.time() + days_to_seconds(30))
        db.set_time_sub(message.from_user.id, time_sub)
        db.give_sub_new(message.from_user.id)
        db.give_queries60(message.from_user.id)
        await bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n–ü–æ–¥–ø–∏—Å–∫–∞ "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ" –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.' + "\n–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ " + 'üëÄ' + db.get_sub(message.from_user.id) + 'üëÄ' + '\n' + "–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π\n" + "–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ\n–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É: https://t.me/+C_p_bDWW5AhiMDk6")
        if(db.get_promo_user(message.from_user.id) != "none"):
            await bot.send_message(message.from_user.id, "–¢–∞–∫ –∫–∞–∫ –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ +" + db.get_promo_queries(db.get_promo_user(message.from_user.id)) + " –∑–∞–ø—Ä–æ—Å–æ–≤üéâ")
            db.give_queries_promo(message.from_user.id, db.get_promo_queries(db.get_promo_user(message.from_user.id)))
        db.delete_promo(message.from_user.id)
    elif(message.successful_payment.invoice_payload == "subInter"):
        time_sub = int(time.time() + days_to_seconds(30))
        db.set_time_sub(message.from_user.id, time_sub)
        db.give_queries150(message.from_user.id)
        db.give_sub_inter(message.from_user.id)
        await bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n–ü–æ–¥–ø–∏—Å–∫–∞ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê" –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.' + "\n–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ " + 'üßê' + db.get_sub(message.from_user.id) + 'üßê' + '\n' + "–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π\n" + "–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ\n–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É: https://t.me/+C_p_bDWW5AhiMDk6")
        if(db.get_promo_user(message.from_user.id) != "none"):
            await bot.send_message(message.from_user.id, "–¢–∞–∫ –∫–∞–∫ –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ +" + db.get_promo_queries(db.get_promo_user(message.from_user.id)) + " –∑–∞–ø—Ä–æ—Å–æ–≤üéâ")
            db.give_queries_promo(message.from_user.id, db.get_promo_queries(db.get_promo_user(message.from_user.id)))
        db.delete_promo(message.from_user.id)
    elif(message.successful_payment.invoice_payload == "subPro"):
        time_sub = int(time.time() + days_to_seconds(30))
        db.set_time_sub(message.from_user.id, time_sub)
        db.give_queries240(message.from_user.id)
        db.give_sub_pro(message.from_user.id)
        await bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n–ü–æ–¥–ø–∏—Å–∫–∞ "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©" –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.' + "\n–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ " + 'üß©' + db.get_sub(message.from_user.id) + 'üß©' + '\n' + "–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π\n" + "–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ\n–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É: https://t.me/+MSOUBM5t16oxYzRi")
        if(db.get_promo_user(message.from_user.id) != "none"):
            await bot.send_message(message.from_user.id, "–¢–∞–∫ –∫–∞–∫ –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ +" + db.get_promo_queries(db.get_promo_user(message.from_user.id)) + " –∑–∞–ø—Ä–æ—Å–æ–≤üéâ")
            db.give_queries_promo(message.from_user.id, db.get_promo_queries(db.get_promo_user(message.from_user.id)))
        db.delete_promo(message.from_user.id)
    elif(message.successful_payment.invoice_payload == "subExp"):
        time_sub = int(time.time() + days_to_seconds(30))
        db.set_time_sub(message.from_user.id, time_sub)
        db.give_queries330(message.from_user.id)
        db.give_sub_exp(message.from_user.id)
        await bot.send_message(message.from_user.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.\n–ü–æ–¥–ø–∏—Å–∫–∞ "üòé–≠–∫—Å–ø–µ—Ä—Çüòé" –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ‚úÖ.' + "\n–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ " + 'üòé' + db.get_sub(message.from_user.id) + 'üòé' + '\n' + "–°—Ä–æ–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π\n" + "–£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ\n–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∑–∞–π–¥–∏—Ç–µ –≤ —ç—Ç—É –≥—Ä—É–ø–ø—É: https://t.me/+MSOUBM5t16oxYzRi")
        if(db.get_promo_user(message.from_user.id) != "none"):
            await bot.send_message(message.from_user.id, "–¢–∞–∫ –∫–∞–∫ –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ +" + db.get_promo_queries(db.get_promo_user(message.from_user.id)) + " –∑–∞–ø—Ä–æ—Å–æ–≤üéâ")
            db.give_queries_promo(message.from_user.id, db.get_promo_queries(db.get_promo_user(message.from_user.id)))
        db.delete_promo(message.from_user.id)
#–≤—ã–¥–∞—á–∞ –ø–æ–¥–ø–∏—Å–∫–∏
@dp.callback_query_handler(text='sub')
async def sub(call: types.CallbackQuery):
    day_to_sec = 30 * 24 * 3600
    sub_time = int(time.time() + day_to_sec)
    time_now = int(time.time())
    #await bot.delete_message(call.from_user.id, call.message.message_id)
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, '–ü–æ–¥–ø–∏—Å–∫–∞ "–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π" —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - ' + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_sub_new1(us)
    db.set_time_sub1(us, sub_time)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='sub1')
async def sub(call: types.CallbackQuery):
    day_to_sec = 30 * 24 * 3600
    sub_time = int(time.time() + day_to_sec)
    time_now = int(time.time())
    #await bot.delete_message(call.from_user.id, call.message.message_id)
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, '–ü–æ–¥–ø–∏—Å–∫–∞ "–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è" —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - ' + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_sub_inter1(us)
    db.set_time_sub1(us, sub_time)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='sub2')
async def sub(call: types.CallbackQuery):
    day_to_sec = 30 * 24 * 3600
    sub_time = int(time.time() + day_to_sec)
    time_now = int(time.time())
    #await bot.delete_message(call.from_user.id, call.message.message_id)
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, '–ü–æ–¥–ø–∏—Å–∫–∞ "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π" —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - ' + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_sub_pro1(us)
    db.set_time_sub1(us, sub_time)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='sub3')
async def sub(call: types.CallbackQuery):
    day_to_sec = 30 * 24 * 3600
    sub_time = int(time.time() + day_to_sec)
    time_now = int(time.time())
    #await bot.delete_message(call.from_user.id, call.message.message_id)
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, '–ü–æ–¥–ø–∏—Å–∫–∞ "–≠–∫—Å–ø–µ—Ä—Ç" —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - ' + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_sub_exp1(us)
    db.set_time_sub1(us, sub_time)
    db.set_give_nickname(call.from_user.id, "none")
#–≤—ã–¥–∞—á–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query_handler(text='dop_1')
async def sub(call: types.CallbackQuery):
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, "–ó–∞–ø—Ä–æ—Å 1 —à—Ç—É–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_queries_1(us)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='dop')
async def sub(call: types.CallbackQuery):
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, "–ó–∞–ø—Ä–æ—Å—ã 60 —à—Ç—É–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_queries60_1(us)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='dop1')
async def sub(call: types.CallbackQuery):
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, "–ó–∞–ø—Ä–æ—Å—ã 150 —à—Ç—É–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_queries150_1(us)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='dop2')
async def sub(call: types.CallbackQuery):
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, "–ó–∞–ø—Ä–æ—Å—ã 240 —à—Ç—É–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_queries240_1(us)
    db.set_give_nickname(call.from_user.id, "none")

@dp.callback_query_handler(text='dop3')
async def sub(call: types.CallbackQuery):
    us = db.get_give_nickname(call.from_user.id)
    await bot.send_message(call.from_user.id, "–ó–∞–ø—Ä–æ—Å—ã 330 —à—Ç—É–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + db.get_give_nickname(call.from_user.id) + '‚úÖ')
    db.give_queries330_1(us)
    db.set_give_nickname(call.from_user.id, "none")
#—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º
@dp.callback_query_handler(text='markY')
async def buydop(call: types.CallbackQuery):
    mark_answer = 'good'
    await bot.send_message(call.from_user.id, '–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ãü§ó!!!')
    db.set_answer(call.from_user.id, mark_answer)

@dp.callback_query_handler(text='markN')
async def buydop(call: types.CallbackQuery):
    mark_answer = 'bad'
    await bot.send_message(call.from_user.id, '–ü–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—åüòÅ')
    db.set_answer(call.from_user.id, mark_answer)
#—Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler()
async def bot_message(message: types.Message):
    def days_to_seconds(days):
         return days * 24 * 3600
 #—Ä–∞—Å—á–µ—Ç –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    def time_sub_day(get_time):
        time_now = int(time.time())
        middle_time = int(get_time) - time_now
        time_end = middle_time // (3600 * 24)
        db.set_time_sub_end(message.from_user.id, time_end)
        if(middle_time <= 0):
            db.del_sub(message.from_user.id)
            return False
        else:
            dt = str(datetime.timedelta(seconds=middle_time))
            dt = dt.replace("days", "–¥–Ω–µ–π")
            return dt
    if(db.get_sub(message.from_user.id) == "–í–ª–∞–¥–µ–ª–µ—Ü"):
        if(message.text == 'üë§–ü–†–û–§–ò–õ–¨'):
            user_sub = time_sub_day(db.get_time_sub(message.from_user.id))
            if(user_sub == False):
                user_sub = "No time"
            else:
                user_sub = "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –µ—â–µ: " + user_sub
            user_nickname = "–í–∞—à –ª–æ–≥–∏–Ω: " + db.get_nickname(message.from_user.id)
            user_email = "–í–∞—à–∞ –ø–æ—á—Ç–∞: " + db.get_email(message.from_user.id)
            if(db.get_sub(message.from_user.id) == '–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üëÄ" + db.get_sub(message.from_user.id) + "üëÄ"
            elif(db.get_sub(message.from_user.id) == '–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üßê" + db.get_sub(message.from_user.id) + "üßê"
            elif(db.get_sub(message.from_user.id) == '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üß©" + db.get_sub(message.from_user.id) + "üß©"
            elif(db.get_sub(message.from_user.id) == '–≠–∫—Å–ø–µ—Ä—Ç'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üòé" + db.get_sub(message.from_user.id) + "üòé"
            elif(db.get_sub(message.from_user.id) == '–í–ª–∞–¥–µ–ª–µ—Ü'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + 'üë®‚Äçüíª' + db.get_sub(message.from_user.id) + 'üë®‚Äçüíª'
            elif(db.get_sub(message.from_user.id) == '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'):
                sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + db.get_sub(message.from_user.id) + '‚ùå'
            await bot.send_message(message.from_user.id, user_nickname)
            await bot.send_message(message.from_user.id, user_email)
            await bot.send_message(message.from_user.id, sub)
            queries = "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ."
            await bot.send_message(message.from_user.id, queries)
            queries_pr = "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.üëã."
            await bot.send_message(message.from_user.id, queries_pr)
            if(user_sub != "–ù–µ—Ç"):
                await bot.send_message(message.from_user.id, user_sub)
        elif(message.text == '–ò–ù–§–ê –ü–û –ù–ò–ö–£üîç'):
            await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, –æ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:")
            db.change_action1(message.from_user.id)
        elif(message.text == '–í–´–î–ê–¢–¨ –ü–û–î–ü–ò–°–ö–£‚úÖ'):
            await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:")
            db.change_action2(message.from_user.id)
        elif(message.text == '–í–´–î–ê–¢–¨ –ó–ê–ü–†–û–°–´üì´'):
            await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã:")
            db.change_action3(message.from_user.id)
        elif(message.text == '–£–î–ê–õ–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£‚ùå'):
            await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:")
            db.change_action4(message.from_user.id)
        elif(message.text == '–£–î–ê–õ–ò–¢–¨ –ó–ê–ü–†–û–°–´üö´'):
            await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã:")
            db.change_action5(message.from_user.id)
        elif(db.get_action(message.from_user.id) == 1):
                nickname = message.text
                email = db.get_email_per(nickname)
                state = db.get_sub_1(nickname)
                promo = db.get_promo_user_1(nickname)
                if(email != None):
                    await bot.send_message(message.from_user.id, "–ü–æ—á—Ç–∞ —é–∑–µ—Ä–∞ " + message.text + ':' + '\n' + email)
                    await bot.send_message(message.from_user.id, "–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ —é–∑–µ—Ä–∞ " + message.text + ':' + '\n' + state)
                    await bot.send_message(message.from_user.id, "–ü—Ä–æ–º–æ–∫–æ–¥ —é–∑–µ—Ä–∞ " + message.text + ':' + '\n' + promo)
                    await bot.send_message(message.from_user.id, "–°–∫–∏–¥–∫–∞ —é–∑–µ—Ä–∞ " + message.text + ':' + '\n' + db.get_promo_disc(promo) + '%')
                else:
                    await bot.send_message(message.from_user.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå")
        #–≤—ã–¥–∞—á–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        elif(db.get_action(message.from_user.id) == 2):
            nickname = message.text
            email = db.get_email_per(nickname)
            if(email != None):
                nickname = message.text
                db.set_give_nickname(message.from_user.id, nickname)
                await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + nickname, reply_markup=nav.sub_markup1)
        elif(db.get_action(message.from_user.id) == 3):
            nickname = message.text
            email = db.get_email_per(nickname)
            if(email != None):
                db.set_give_nickname(message.from_user.id, nickname)
                await bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—ã–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - " + nickname, reply_markup=nav.queries_markup1)
            else:
                await bot.send_message(message.from_user.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå")
        elif(db.get_action(message.from_user.id) == 4):
            nickname = message.text
            email = db.get_email_per(nickname)
            if(email != None):
                db.del_sub_admin(nickname)
                await bot.send_message(message.from_user.id, f"–ü–æ–¥–ø–∏—Å–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {nickname} –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!üòâ")
            else:
                await bot.send_message(message.from_user.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå")
        elif(db.get_action(message.from_user.id) == 5):
            nickname = message.text
            email = db.get_email_per(nickname)
            if(email != None):
                db.del_queries_admin(nickname)
                await bot.send_message(message.from_user.id, f"–ó–∞–ø—Ä–æ—Å—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {nickname} –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!üòâ")
            else:
                await bot.send_message(message.from_user.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç‚ùå")
    else:
        if(message.chat.type == 'private'):
                if(message.text == 'üë§–ü–†–û–§–ò–õ–¨'):
                    user_sub = time_sub_day(db.get_time_sub(message.from_user.id))
                    if(user_sub == False):
                        user_sub = "No"
                    else:
                        user_sub = "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –µ—â–µ: " + user_sub
                    user_nickname = "–í–∞—à –ª–æ–≥–∏–Ω: " + db.get_nickname(message.from_user.id)
                    user_email = "–í–∞—à–∞ –ø–æ—á—Ç–∞: " + db.get_email(message.from_user.id)
                    if(db.get_sub(message.from_user.id) == '–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üëÄ" + db.get_sub(message.from_user.id) + "üëÄ"
                    elif(db.get_sub(message.from_user.id) == '–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üßê" + db.get_sub(message.from_user.id) + "üßê"
                    elif(db.get_sub(message.from_user.id) == '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üß©" + db.get_sub(message.from_user.id) + "üß©"
                    elif(db.get_sub(message.from_user.id) == '–≠–∫—Å–ø–µ—Ä—Ç'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + "üòé" + db.get_sub(message.from_user.id) + "üòé"
                    elif(db.get_sub(message.from_user.id) == '–í–ª–∞–¥–µ–ª–µ—Ü'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + 'üë®‚Äçüíª' + db.get_sub(message.from_user.id) + 'üë®‚Äçüíª'
                    elif(db.get_sub(message.from_user.id) == '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'):
                        sub = "–í–∞—à —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: " + db.get_sub(message.from_user.id) + '‚ùå'
                    await bot.send_message(message.from_user.id, user_nickname)
                    await bot.send_message(message.from_user.id, user_email)
                    await bot.send_message(message.from_user.id, sub)
                        
                    queries = "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) +" –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤‚úÖ."
                    await bot.send_message(message.from_user.id, queries)
                    queries_pr = "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤üëã."
                    await bot.send_message(message.from_user.id, queries_pr)
                    if(user_sub != "No"):
                        await bot.send_message(message.from_user.id, user_sub)
                elif(message.text == 'üíµ–ö–£–ü–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£'):
                    if(db.get_sub(message.from_user.id) == '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'):
                        if(db.get_promo_user(message.from_user.id) == 'none'):
                            await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:\n(–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É üìã–û–ü–ò–°–ê–ù–ò–ï –£–°–õ–£–ì)', reply_markup=nav.sub_markup)
                        else:
                            disc1 = int(db.get_promo_disc(db.get_promo_user(message.from_user.id)))
                            new = 75 - (75 * (disc1 / 100))
                            new_rounded = round(new, 1)
                            new_str = str(new_rounded)

                            inter = 165 - (165 * (disc1 / 100))
                            inter_rounded = round(inter, 1)
                            inter_str = str(inter_rounded)

                            pro = 265 - (265 * (disc1 / 100))
                            pro_rounded = round(pro, 1)
                            pro_str = str(pro_rounded)

                            exp = new = 355 - (355 * (disc1 / 100))
                            exp_rounded = round(exp, 1)
                            exp_str = int(exp_rounded)

                            sub_markup4 = InlineKeyboardMarkup(row_width=1)
                            btnNew = InlineKeyboardButton(text = f"–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π = {new_str} —Ä—É–±–ª–µ–π‚úÖ", callback_data='buysub', parse_mode=types.ParseMode.MARKDOWN)
                            btnInter = InlineKeyboardButton(text = f"–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è = {inter_str} —Ä—É–±–ª–µ–π‚úÖ", callback_data='buysub1')
                            btnPro = InlineKeyboardButton(text = f"–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π = {pro_str} —Ä—É–±–ª–µ–π‚úÖ", callback_data='buysub2')
                            btnExp = InlineKeyboardButton(text = f"–≠–∫—Å–ø–µ—Ä—Ç = {exp_str} —Ä—É–±–ª–µ–π‚úÖ", callback_data='buysub3')
                            sub_markup4.insert(btnNew)
                            sub_markup4.insert(btnInter)
                            sub_markup4.insert(btnPro)
                            sub_markup4.insert(btnExp)

                            await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:\n(–æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É üìã–û–ü–ò–°–ê–ù–ò–ï –£–°–õ–£–ì)', reply_markup=sub_markup4)

                    elif(db.get_sub(message.from_user.id) != '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'):
                        await bot.send_message(message.from_user.id, "–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ü–æ–¥–ø–∏—Å–∫–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —ç—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –Ω–æ–≤—É—é")
                elif(message.text == 'üéÇ–ü–†–û–ú–û–ö–û–î'):
                    if(db.get_promo_user(message.from_user.id) == 'none'):
                        await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥üîë:")
                        db.set_promo_action(message.from_user.id, 1)
                    else:
                        await bot.send_message(message.from_user.id, "–ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –≤–≤–µ–¥–µ–Ω!!!")
                elif(message.text == '‚ûï–ö–£–ü–ò–¢–¨ –ó–ê–ü–†–û–°–´'):
                    await bot.send_message(message.from_user.id, '–•–æ—Ç–∏—Ç–µ –¥–æ–∫—É–ø–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã? –¢–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–π—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–∫–æ–ª—å–∫–æ –í–∞–º –Ω—É–∂–Ω–æ –∏ —Å–º–µ–ª–æ –æ–ø–ª–∞—á–∏–≤–∞—Ç–µ —Å—Ä–∞–∑—É, –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –±–æ—Ç–∞‚¨áÔ∏è\n ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è \n–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∑–∞–ø—Ä–æ—Å–∞–º–∏, –Ω—É–∂–Ω–∞ –ª—é–±–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤ –±–æ—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä –ó–∞–≥–ª—è–Ω—É–≤—à–∏–π', reply_markup=nav.queries_markup)
                elif(message.text == 'üìã–û–ü–ò–°–ê–ù–ò–ï –£–°–õ–£–ì'):
                    new = '–ü–æ–¥–ø–∏—Å–∫–∞ "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ":\n\n–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ", —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n\n1. –î–æ—Å—Ç—É–ø –∫ –∑–∞–ø—Ä–æ—Å–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏, –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µüìë.\n2. –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –¥–æ 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Üü§ü, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.\n3. –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ" –∏ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê"üçÄ.\n\n(—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 75 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü)'
                    inter = '–ü–æ–¥–ø–∏—Å–∫–∞ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê":\n\n–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê", —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n\n1. –í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏ "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ".\n2. –¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –¥–æ 150 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Üüì¨.\n3. –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ" –∏ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê"üçÄ.\n\n(—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 165 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü)'
                    pro = '–ü–æ–¥–ø–∏—Å–∫–∞ "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©":\n\n–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©", —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n\n1. –í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê".\n2. –¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –¥–æ 240 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Üüòé.\n3. –ú—ã —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º –Ω–∞–∏–±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –≤ –º–æ–º–µ–Ω—Ç —Å–∏–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –±–æ—Ç–∞.\n4. –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©" –∏ "üòé–≠–∫—Å–ø–µ—Ä—Çüòé"üçÄ.(–ø—Ä–∏–∑—ã –Ω–∞–º–Ω–æ–≥–æ –¥–æ—Ä–æ–∂–µ —á–µ–º –≤ –≥—Ä—É–ø–ø–µ "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ" –∏ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê")\n\n(—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 265 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü)'
                    exp = '–ü–æ–¥–ø–∏—Å–∫–∞ "üòé–≠–∫—Å–ø–µ—Ä—Çüòé":\n\n–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É "üòé–≠–∫—Å–ø–µ—Ä—Çüòé", —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:\n\n1. –í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏ "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©".\n2. –ê —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –¥–æ 330 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Üü§Ø.\n3. –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É "üß©–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–πüß©" –∏ "üòé–≠–∫—Å–ø–µ—Ä—Çüòé"üçÄ + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è "üòé–≠–∫—Å–ø–µ—Ä—Çüòé".(–ø—Ä–∏–∑—ã –Ω–∞–º–Ω–æ–≥–æ –¥–æ—Ä–æ–∂–µ —á–µ–º –≤ –≥—Ä—É–ø–ø–µ "üëÄ–ó–∞–≥–ª—è–Ω—É–≤—à–∏–πüëÄ" –∏ "üßê–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—èüßê")\n\n(—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: 355 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü)'
                    await bot.send_message(message.from_user.id, '–í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏:')
                    await bot.send_message(message.from_user.id, new)
                    await bot.send_message(message.from_user.id, inter)
                    await bot.send_message(message.from_user.id, pro)
                    await bot.send_message(message.from_user.id, exp)
                    await bot.send_message(message.from_user.id, "–ó–∞–ø—Ä–æ—Å—ã:")
                    await bot.send_message(message.from_user.id, "60 –∑–∞–ø—Ä–æ—Å–æ–≤ = 75 —Ä—É–±–ª–µ–π‚úÖ\n150 –∑–∞–ø—Ä–æ—Å–æ–≤ = 165 —Ä—É–±–ª–µ–π‚úÖ\n240 –∑–∞–ø—Ä–æ—Å–æ–≤ = 265 —Ä—É–±–ª–µ–π‚úÖ\n330 –∑–∞–ø—Ä–æ—Å–æ–≤ = 355 —Ä—É–±–ª–µ–π‚úÖ\n(–∑–∞–ø—Ä–æ—Å—ã –≤—ã–¥–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞)")
                elif(message.text == '–ß–¢–û –≠–¢–û‚ùì'):
                    what = "–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ!üëã \n–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –õ–∏—á–Ω–æ–º –£—á–µ–±–Ω–æ–º –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ. –≠—Ç–æ—Ç –±–æ—Ç –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º. –í –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç: –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç, —Å–æ—á–∏–Ω–µ–Ω–∏–π, –ø–æ–∏—Å–∫ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ä–µ—à–µ–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–¥–∞—á—å –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è 2 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –æ–ø—Ä–æ–±—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É(–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ üíµ–ö–£–ü–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£) –∏–ª–∏ –¥–æ–∫—É–ø–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã(–µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–æ –∫–Ω–æ–ø–∫–µ ‚ûï–î–û–ö–£–ü–ò–¢–¨ –ó–ê–ü–†–û–°–´). –ó–∞–ø—Ä–æ—Å - —ç—Ç–æ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –í—ã –∑–∞–¥–∞–µ—Ç–µ –±–æ—Ç—É. –¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å —É –í–∞—Å, –∫–∞–∫–æ–π —Å—Ç–∞—Ç—É—Å —É –í–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –∫–∞–∫–æ–π —É –í–∞—Å –Ω–∏–∫, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É üë§–ü–†–û–§–ò–õ–¨. \n–ü–æ—á—Ç–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: Valentinefukalov@gmail.com.\n –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üçÄ"
                    await bot.send_message(message.from_user.id, what)
                else:
                    nickname = message.text
                    if(db.get_nickname(message.from_user.id) == 'setnickname'):
                        if(len(message.text) > 15):
                            await bot.send_message(message.from_user.id, "–õ–æ–≥–∏–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 15 —Å–∏–º–≤–æ–ª–æ–≤")
                        elif(len(message.text) < 4):
                            await bot.send_message(message.from_user.id, "–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤")
                        elif('@' in message.text or '/' in message.text):
                            await bot.send_message(message.from_user.id, "–õ–æ–≥–∏–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ @ –∏ /")
                        elif(db.nickname_exists(nickname) == True):
                            await bot.send_message(message.from_user.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                        else:
                            nickname = message.text
                            db.set_nickname(message.from_user.id, nickname)
                            if(db.get_nickname(message.from_user.id) != 'setnickname'):
                                await bot.send_message(message.from_user.id, "–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω‚úÖ")
                                #await bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—Éüì¨ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è)")
                            else:
                                await bot.send_message(message.from_user.id, "–õ–æ–≥–∏–Ω –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                            if(db.get_email(message.from_user.id) != "setemail" and db.get_nickname(message.from_user.id) != 'setnickname'):
                                db.set_signup(message.from_user.id, 'done')
                                await bot.send_message(message.from_user.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üéâüéâüéâ\n–í–∞–º –≤—ã–¥–∞–ª–∏—Å—å 2 –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ç–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –±–æ—Ç—É –≤–æ–ø—Ä–æ—Å—ã‚úÖ.\n–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö.", reply_markup= nav.mainMenu)
                            elif(db.get_email(message.from_user.id) == 'setemail'):
                                await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—Éüì¨ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏(—ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è)")
                            else:
                                await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω!")
                    elif(db.get_email(message.from_user.id) == 'setemail'):
                        if(len(message.text) > 40):
                            await bot.send_message(message.from_user.id, "–ü–æ—á—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 40 —Å–∏–º–≤–æ–ª–æ–≤")
                        elif(not '@' in message.text or not ('.com' in message.text or '.ru' in message.text)):
                            await bot.send_message(message.from_user.id, "–ü–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Ç–∞–∫–∏–µ –∫–∞–∫ @ –∏ (.com –∏–ª–∏ .ru)")
                        else:
                            db.set_email(message.from_user.id, message.text)
                            await bot.send_message(message.from_user.id, "–ü–æ—á—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞‚úÖ")
                            await bot.send_message(message.from_user.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!üéâüéâüéâ\n–í–∞–º –≤—ã–¥–∞–ª–∏—Å—å 2 –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ —Ç–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –±–æ—Ç—É –≤–æ–ø—Ä–æ—Å—ã‚úÖ.\n–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —á–∞—Ç –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–∏—Ö.", reply_markup= nav.mainMenu)
                    elif(db.get_promo_action(message.from_user.id) == '1'):
                        disc = db.get_promo_disc(message.text)
                        queries = db.get_promo_queries(message.text)
                        if(db.get_promo_name(message.text) != None):
                            await bot.send_message(message.from_user.id, f'–ü—Ä–æ–º–æ–∫–æ–¥ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω‚úÖ!\n–í–∞—à–∞ —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {disc}%.üåü\n–ò —Ç–∞–∫ –∂–µ +{queries} –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏.üîî')
                            db.set_promo(message.from_user.id, message.text)
                        else:
                            await bot.send_message(message.from_user.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞‚ùå')
                        db.set_promo_action(message.from_user.id, 0)
                    else:
                        user_sub = time_sub_day(db.get_time_sub(message.from_user.id))
                        if(((db.get_sub(message.from_user.id) != '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞') and (db.get_queries(message.from_user.id) != '0') and (user_sub != False)) or db.get_queries_pr(message.from_user.id) != '0'):
                            if(db.get_sub(message.from_user.id) == "–ó–∞–≥–ª—è–Ω—É–≤—à–∏–π" or db.get_queries_pr(message.from_user.id) != '0'):
                                queries = db.get_queries(message.from_user.id)
                                update(messages, "user", message.text)

                                response = openai.ChatCompletion.create(
                                    model="gpt-3.5-turbo",  # –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                                    messages=messages,   # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è
                                    max_tokens=2000,
                                )

                                await message.answer(response['choices'][0]['message']['content'] + '\n\n' + '–í—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –æ—Ç–≤–µ—Ç–æ–º –±–æ—Ç–∞?', reply_markup= nav.mark_YN, parse_mode="markdown")
                                if(db.get_queries_pr(message.from_user.id) != '0'):
                                    db.del_queries_pr(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                                else:
                                    db.del_queries(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤")
                            elif(db.get_sub(message.from_user.id) == "–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π—Å—è"):
                                queries = db.get_queries(message.from_user.id)
                                update(messages, "user", message.text)

                                response = openai.ChatCompletion.create(
                                    model="gpt-3.5-turbo",  # –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                                    messages=messages,   # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è
                                    max_tokens=2000,
                                )

                                await message.answer(response['choices'][0]['message']['content'] + '\n\n' + '–í—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –æ—Ç–≤–µ—Ç–æ–º –±–æ—Ç–∞?', reply_markup= nav.mark_YN, parse_mode="markdown")
                                if(db.get_queries_pr(message.from_user.id) != '0'):
                                    db.del_queries_pr(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                                else:
                                    db.del_queries(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤")
                            elif(db.get_sub(message.from_user.id) == "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"):
                                queries = db.get_queries(message.from_user.id)
                                update(messages, "user", message.text)

                                response = openai.ChatCompletion.create(
                                    model="gpt-3.5-turbo",  # –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                                    messages=messages,   # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è
                                    max_tokens=2000,
                                )

                                await message.answer(response['choices'][0]['message']['content'] + '\n\n' + '–í—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –æ—Ç–≤–µ—Ç–æ–º –±–æ—Ç–∞?', reply_markup= nav.mark_YN, parse_mode="markdown")
                                if(db.get_queries_pr(message.from_user.id) != '0'):
                                    db.del_queries_pr(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                                else:
                                    db.del_queries(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤")
                            elif(db.get_sub(message.from_user.id) == "–≠–∫—Å–ø–µ—Ä—Ç"):
                                queries = db.get_queries(message.from_user.id)
                                update(messages, "user", message.text)

                                response = openai.ChatCompletion.create(
                                    model="gpt-3.5-turbo",  # –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                                    messages=messages,   # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è
                                    max_tokens=2000,
                                )

                                await message.answer(response['choices'][0]['message']['content'] + '\n\n' + '–í—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –æ—Ç–≤–µ—Ç–æ–º –±–æ—Ç–∞?', reply_markup= nav.mark_YN, parse_mode="markdown")
                                if(db.get_queries_pr(message.from_user.id) != '0'):
                                    db.del_queries_pr(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                                else:
                                    db.del_queries(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤")
                            elif(db.get_sub(message.from_user.id) == "–í–ª–∞–¥–µ–ª–µ—Ü"):
                                queries = db.get_queries(message.from_user.id)
                                update(messages, "user", message.text)

                                response = openai.ChatCompletion.create(
                                    model="gpt-3.5-turbo",  # –ù–æ–≤–∞—è –º–æ–¥–µ–ª—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
                                    messages=messages,   # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è
                                    max_tokens=2000,
                                )

                                await message.answer(response['choices'][0]['message']['content'] + '\n\n' + '–í—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –æ—Ç–≤–µ—Ç–æ–º –±–æ—Ç–∞?', reply_markup= nav.mark_YN, parse_mode="markdown")
                                if(db.get_queries_pr(message.from_user.id) != '0'):
                                    db.del_queries_pr(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries_pr(message.from_user.id) + " –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
                                else:
                                    db.del_queries(message.from_user.id)
                                    await bot.send_message(message.from_user.id, "–£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + db.get_queries(message.from_user.id) + " –∑–∞–ø—Ä–æ—Å–æ–≤")
                        elif(db.get_sub(message.from_user.id) == '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞'):
                            await bot.send_message(message.from_user.id, "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞‚ùå. –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –∫—É–ø–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É üíµ–ö–£–ü–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£.", reply_markup= nav.mainMenu)
                        elif(db.get_queries(message.from_user.id) == '0'):
                            await bot.send_message(message.from_user.id, "–£ –í–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∑–∞–ø—Ä–æ—Å—ã‚ùå. –ß—Ç–æ–±—ã –¥–æ–∫—É–ø–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚ûï–î–û–ö–£–ü–ò–¢–¨ –ó–ê–ü–†–û–°–´", reply_markup= nav.mainMenu)
        
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
